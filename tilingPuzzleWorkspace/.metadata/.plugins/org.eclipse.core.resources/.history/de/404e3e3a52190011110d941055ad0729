package puzzle;

import java.util.Collection;
import java.util.LinkedList;

import algorithm.Cell;

public class Tile
{
	private Cell startingCell;
	private Cell endingCell;
	private int xDimension;
	private int yDimension;
	private int numDominos;
	private int id;
	Collection<Domino> dominoList;
	
	public Tile(Cell startCell, Cell endCell, int numDominos, Collection<Domino> dominoList)
	{
		startingCell = startCell;
		endingCell = endCell;
		yDimension = (endingCell.getI() - startCell.getI() + 1);
		xDimension = (endingCell.getJ() - startCell.getJ() + 1);
		this.numDominos = numDominos;
		id = 0;
		this.dominoList = new LinkedList<Domino>();
		this.dominoList.addAll(dominoList);
	}

	public Cell getStartingCell() {
		return startingCell;
	}

	public Cell getEndingCell() {
		return endingCell;
	}

	public int getxDimension() {
		return xDimension;
	}

	public int getyDimension() {
		return yDimension;
	}

	public int getNumDominos() {
		return numDominos;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}
	
	@Override
	public String toString()
	{
		return Integer.toString(id) + ": " + startingCell + " to " + endingCell + dominoList.size() + "dominoes";
	}

	public void nameAllDominos() 
	{
		
		
	}
	
}
