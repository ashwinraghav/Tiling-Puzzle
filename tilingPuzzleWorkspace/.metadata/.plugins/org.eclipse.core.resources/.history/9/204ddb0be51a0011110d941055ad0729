package algorithm;

import java.util.ArrayList;

import puzzle.Domino;
import puzzle.Tile;

public class TileTurner 
{

	public static ArrayList<Tile> getTurnedTileList(Tile tile, Domino[][] matrix)
	{
		ArrayList<Tile> turnedTileList = new ArrayList<Tile>(3);
		
		Tile tile90 = turnTile(tile, matrix);
		Tile tile180 = turnTile(tile90, matrix);
		Tile tile270 = turnTile(tile180, matrix);
		turnedTileList.add(tile90);
		turnedTileList.add(tile180);
		turnedTileList.add(tile270);
		return null;
	}

	private static Tile turnTile(Tile tile, Domino[][] matrix) 
	{
		Domino[][] resMatrix = new Domino[tile.getxDimension()][tile.getyDimension()];
		for(int i=0, k=tile.getStartingCell().getI() ; k<tile.getyDimension(); ++k)
		{
			for(int j=0, l=tile.getStartingCell().getJ() ; j< tile.getxDimension(); ++j)
			{
				resMatrix[i][j] = matrix[i][j];
			}
		}
		
		return null;
	}
}
