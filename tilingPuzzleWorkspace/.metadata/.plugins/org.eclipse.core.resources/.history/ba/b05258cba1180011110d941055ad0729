package fileHandler;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

import puzzle.Domino;

import main.ErrorHandler;

public class FileReader
{
	
	public static InputMatrixInfo doPassOne(File file) 
	{
		
		Scanner scanner = null;
		int numRows = 0;
		int numCols = 0;
		
        try 
        {
 
            scanner = new Scanner(file);
                          
            /* Reading from the file */
            while (scanner.hasNextLine()) 	
            {
            	String line = scanner.nextLine();
            	
            	if(line.length() > numCols)
            		numCols = line.length();
            	/*
            	  TODO: Later if time permits, handle this better where numCols does not depend
            	 on trailing spaces; i.e we need a trailing trim alone 
            	 */
            	
            	numRows++;
            }
            System.out.println("numRows = " + numRows + "numCols = " + numCols);
        }
        
        catch (FileNotFoundException fnfe) 
        {
        	fnfe.printStackTrace();
        	ErrorHandler.throwAndTerminate("attempt to read from file failed");
        }
		
        finally
        {
        	scanner.close();
        }
        
        return new InputMatrixInfo(numRows, numCols);
	}

	public static void loadMatrix(File file, Domino[][] matrix) 
	{
		
		Scanner scanner = null;
		int row = 0;
		
        try 
        {
             scanner = new Scanner(file);
             
            /* Reading from the file */
            while (scanner.hasNextLine()) 	
            {
            	String line = scanner.nextLine();
            	copyLine(line, matrix, row);
            	row++;
            	
            }
        }
        
        catch (FileNotFoundException fnfe) 
        {
        	fnfe.printStackTrace();
        	ErrorHandler.throwAndTerminate("attempt to read from file failed");
        }
		
        finally
        {
        	scanner.close();
        }
        				
	}

	private static void copyLine(String line, Domino[][] matrix, int row) 
	{
		int len = line.length();
		for(int lcv=0; lcv<len; lcv++)
			matrix[row][lcv] = new Domino(line.charAt(lcv));					
	}

		
		
}
