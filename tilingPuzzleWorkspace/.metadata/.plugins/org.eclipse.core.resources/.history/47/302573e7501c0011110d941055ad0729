package utility;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Set;

import puzzle.Tile;
import algorithm.dancinglinks.DataObject;

public class Printing
{


	public static void rightPrint(DataObject header) 
	{
		
		DataObject tmp = header.getRight();
		System.out.println("right print");
		int count = 0;
		while(tmp != header)
		{
			System.out.print(tmp.getName() +" ");
			tmp = tmp.getRight();
			count++;
		}
		System.out.println("total number of elements = " + count);
		
	}
	
	public static void leftPrint(DataObject header) 
	{
		System.out.println("left print");
		DataObject tmp = header.getLeft();
		int count = 0;
		while(tmp != header)
		{
			System.out.print(tmp.getName()+ " ");
			tmp = tmp.getLeft();
			count++;
		}
		System.out.println("total number of elements = " + count);
	}
	
	public static void printMapping(
			HashMap<Tile, ArrayList<ArrayList<Integer>>> mapping) 
	{
		
		Set<Tile> tileSet = mapping.keySet();
		
		for(Tile tile : tileSet)
		{
			ArrayList<ArrayList<Integer>> mapped = mapping.get(tile);
			System.out.println("tile " + tile.getId() + "covers");
			for(ArrayList<Integer> colIds : mapped)
			{
				for(Integer coldId : colIds)
				{
					System.out.print(coldId + " ");
				}
				System.out.println();
			}
			
		}
		
	}
	
	public static void printGrid(DataObject header, ArrayList<DataObject> colPointerList) 
	{
		
		DataObject tmp = header.getRight();
		int count = 0;
		
		while(tmp != header)
		{
			System.out.print(tmp.getName() +"\t");
			tmp = tmp.getRight();
			++count;
		}
		System.out.println();
		
		int[][] matrix = new int [colPointerList.size()][count];
		
		for( int i=0; i< colPointerList.size(); ++i )
		{
			DataObject lcv = colPointerList.get(i);
			tmp = lcv.getRight();
			
			while(tmp != lcv)
			{
				matrix[i][Integer.parseInt(tmp.getColData().getName())] = 1;
				tmp = tmp.getRight();
			}
			matrix[i][Integer.parseInt(tmp.colData.name)] = 1;
			
		}
		
		for(int i=0; i< colPointerList.size(); i++)
		{
			for(int j=0; j<count; ++j)
			{
				if(matrix[i][j] != 1)
					System.out.print("0\t");
				else
					System.out.print("1\t");
			}
			System.out.println();
		}
	}
	
	
}
